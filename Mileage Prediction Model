# Mileage Prediction Model

# Objective
# To build a model which can predict mileage of a vehicle
# Data Source = This data is taken from the github repository of ybi foundation(https://github.com/YBIFoundation/Dataset/raw/main)
# import library
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Import data
df = pd.read_csv('https://github.com/YBIFoundation/Dataset/raw/main/MPG.csv')
# Describe Data
df.head()
df.nunique()
df.info()
df.describe()
df.corr()
df = df.dropna()
df.info()
# Data Visualization
sns.pairplot(df,x_vars = ['displacement','horsepower','weight','acceleration','mpg'], y_vars = ['mpg']);
sns.regplot(x ='displacement', y ='mpg',data = df);
# Define Target Variable y and Feature variables (x)
df.columns
y = df['mpg']
y.shape
X = df[['displacement','horsepower','weight','acceleration']]
X.shape
X
# Data Preprocessing
from sklearn.preprocessing import StandardScaler
ss = StandardScaler()
X = ss.fit_transform(X)
X
pd.DataFrame(X).describe()
# Train Test Split Data
from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,y,train_size = 0.7,random_state = 2529)
X_train.shape,X_test.shape,y_train.shape,y_test.shape
#Linear Regression Model
from sklearn.linear_model import LinearRegression
lr = LinearRegression()
lr.fit(X_train,y_train)
lr.intercept_
lr.coef_
#Prediction of Data
y_pred = lr.predict(X_test)
y_pred
print("\nMileage Prediction for Vehicle:")
print("mileage" if y_pred[0] == 1 else "No mileage")
# Accuracy of data
from sklearn.metrics import mean_absolute_error,mean_absolute_percentage_error,r2_score
mean_absolute_error(y_test,y_pred)
mean_absolue_percentage_error(y_test,y_pred)
r2_score(y_test,y_pred)
# Explanation
print("\nModel Explanation:")
print("The model helps to predict the mileage of the given vehicle by using train_test_split method using linear regression method of data solving. ")








